# bot/handlers/filters.py
import logging

from aiogram import Router, F
from aiogram.types import CallbackQuery

from bot.keyboards.inline import (
    get_back_main_keyboard,
    get_main_keyboard,
    get_cancel_keyboard,
)
from bot.utils.db_utils import get_all_categories

router = Router()
logger = logging.getLogger(__name__)


@router.callback_query(F.data == "show_filters")
async def show_filters(callback: CallbackQuery):
    try:
        categories = get_all_categories()
        if not categories:
            await callback.message.answer("‚ö† –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", reply_markup=get_back_main_keyboard())
            logger.warning("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return

        text = "üìÇ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n\n"
        text += "\n".join(f"üî∏ {cat}" for cat in categories)
        await callback.message.edit_text(text, reply_markup=get_back_main_keyboard())
        await callback.answer()
        logger.info("–ü–æ–∫–∞–∑–∞–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.", reply_markup=get_main_keyboard())
        await callback.answer()
